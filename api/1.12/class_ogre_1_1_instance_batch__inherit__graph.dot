digraph "Ogre::InstanceBatch"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="Ogre::InstanceBatch",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="Ogre::Renderable",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_renderable.html",tooltip="Abstract class defining the interface all renderable objects must implement. "];
  Node2 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Ogre::MovableObject",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_movable_object.html",tooltip="Abstract class defining a movable object in a scene. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Ogre::ShadowCaster",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_shadow_caster.html",tooltip="This class defines the interface that must be implemented by shadow casters. "];
  Node4 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Ogre::AnimableObject",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_animable_object.html",tooltip="Defines an interface to classes which have one or more AnimableValue instances to expose..."];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="MovableAlloc",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_allocated_object.html"];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Ogre::BaseInstanceBatchVTF",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_base_instance_batch_v_t_f.html",tooltip="Instancing implementation using vertex texture through Vertex Texture Fetch (VTF) This implementation..."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Ogre::InstanceBatchHW_VTF",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_instance_batch_h_w___v_t_f.html",tooltip="Instancing implementation using vertex texture through Vertex Texture Fetch (VTF) and hardware instan..."];
  Node6 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Ogre::InstanceBatchVTF",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_instance_batch_v_t_f.html"];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Ogre::InstanceBatchHW",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_instance_batch_h_w.html",tooltip="This is technique requires true instancing hardware support. "];
  Node0 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Ogre::InstanceBatchShader",height=0.2,width=0.4,color="black",URL="$class_ogre_1_1_instance_batch_shader.html",tooltip="This is the same technique the old \"InstancedGeometry\" implementation used (with improvements). "];
}
